#!/usr/bin/env bash
#assumes xsltproc.exe is in $PATH

_appDir=`dirname \`which $0\``
_jarsDir=$_appDir/jars
_xslDir=$_appDir/xsl

#function to show program usage
show_usage(){
cat << EOF
Usage: xsltctags [options] [file]
Options:
  -f tagfile   Use the name specified by tagfile for the tag file
               Default file name is 'tags'
               If tagfile = '-' (without quotes), output will be to stdout
  -o tagfile   Synonym for -f tagfile
  -p [xsltproc|saxon]  Default is xsltproc
  -v           create file with vim tagbar g:tagbar_type_xslt definition
  -h           Display this usage info
Example Usage:
  xsltctags test.xsl
  --- Processes test.xsl and places output
  --- in to default tagfile named "tags"

  xsltctags -f - test.xsl
  --- Processes test.xsl
  --- Output is streamed to stdout

  xsltctags -f mytags.txt test.xsl
  --- Processes test.xsl and places output
  --- in mytags.txt
EOF
}

_runctags(){
  #echo _tagoutput=$_tagoutput
  #echo _xsltprocessor=$_xsltprocessor
  #echo _fileToParse=$_fileToParse
  if [[ "$_xsltprocessor" == "xsltproc" ]]; then
    if [[ "$_tagoutput" == "/dev/stdout" ]]; then
      xsltproc --stringparam fileName "$_fileToParse" "$_xslDir/xsltctags-xsltproc.xsl" "$_fileToParse"
    else
      xsltproc --output "$_tagoutput" --stringparam fileName "$_fileToParse" "$_xslDir/xsltctags-xsltproc.xsl" "$_fileToParse"
    fi
  elif [[ "$_xsltprocessor" == "saxon" ]]; then
    if [[ "$_tagoutput" == "/dev/stdout" ]]; then
      java -jar $_jarsDir/saxon9.jar -l:on -versionmsg:off -xsl:"$_xslDir/xsltctags-saxon.xsl" -s:"$_fileToParse" fileName="$_fileToParse"
    else
      java -jar $_jarsDir/saxon9.jar -l:on -versionmsg:off -xsl:"$_xslDir/xsltctags-saxon.xsl" -s:"$_fileToParse" -o:"$_tagoutput" fileName="$_fileToParse"
    fi
  fi
}

_createXSLTctagsVim(){
  if [[ "$_xsltprocessor" == "xsltproc" ]]; then
    echo "<xml><ctagsvim/></xml>" | xsltproc "$_xslDir/xsltctags-xsltproc.xsl" -
  else
    java -jar $_jarsDir/saxon9.jar -l:on -versionmsg:off -xsl:"$_xslDir/xsltctags-saxon.xsl" -it:createXSLTctagsvim
  fi
}

#If no arguments passed, then show usage
if [[ $# -eq 0 ]] ; then
  show_usage
  exit
fi

#default values before parsing arguments
_tagoutput=tags #Default output file is tags
_xsltprocessor=xsltproc

_shiftCount=0
while getopts "p:f:o:hv" opt; do
  #echo found opt: $opt=$OPTARG
  case "$opt" in
    h)   show_usage; exit ;;
    v)   _createXSLTctagsVim; exit ;;
    p)   if [[ $OPTARG == "saxon" ]]; then
           _xsltprocessor="saxon"
         elif [[ $OPTARG == "xsltproc" ]]; then
           _xsltprocessor="xsltproc"
         fi
         _shiftCount=$(($_shiftCount + 2))
         ;;
    f|o) if [[ $OPTARG == "-" ]]; then
           _tagoutput="/dev/stdout"
         else
           _tagoutput="$OPTARG"
         fi
         _shiftCount=$(($_shiftCount + 2))
         ;;
    \?)  echo "$0: ERROR - unrecognized option $1" 1>&2; exit 1;;
    :)   echo "$0: ERROR - option -$OPTARG requires an argument" 1>&2; exit 1;;
    *)   break;;
  esac
done

#echo $_shiftCount
shift $_shiftCount
#for arg do echo '--> '"\`$arg'" ; done
num_files=$#
if [[ $num_files -lt 1 ]]; then
  echo "$0: ERROR - no files to process" 1>&2
  exit 1 #Exit if there are no files to process
fi

_fileToParse=$1
_runctags
